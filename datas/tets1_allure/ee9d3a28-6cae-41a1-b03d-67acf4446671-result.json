{"name": "test_login", "status": "broken", "statusDetails": {"message": "TypeError: Object of type Response is not JSON serializable", "trace": "self = <testcases.test_yemai.TestYemai object at 0x00000269540355E0>\n\n    def test_login(self):\n>       json.dumps(self.login(**self.data),indent=2)\n\ntest_yemai.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\SouthSide\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\__init__.py:234: in dumps\n    return cls(\nC:\\Users\\SouthSide\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\encoder.py:201: in encode\n    chunks = list(chunks)\nC:\\Users\\SouthSide\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\encoder.py:438: in _iterencode\n    o = _default(o)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.encoder.JSONEncoder object at 0x00000269540354C0>\no = <Response [200]>\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(f'Object of type {o.__class__.__name__} '\n                        f'is not JSON serializable')\nE       TypeError: Object of type Response is not JSON serializable\n\nC:\\Users\\SouthSide\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\encoder.py:179: TypeError"}, "start": 1644391193650, "stop": 1644391194112, "uuid": "b696e63b-efd8-49db-b2be-d5646bc42d90", "historyId": "f5050d2ca8c04947877b802067b37a24", "testCaseId": "7090f16119b93c2b7294923f9e4d77af", "fullName": "test_yemai.TestYemai#test_login", "labels": [{"name": "suite", "value": "test_yemai"}, {"name": "subSuite", "value": "TestYemai"}, {"name": "host", "value": "LAPTOP-LBH33VIE"}, {"name": "thread", "value": "12688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_yemai"}]}